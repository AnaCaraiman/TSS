name: Calculate Coverage

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  RABBITMQ_HOST: localhost
  RABBITMQ_PORT: 5672
  RABBITMQ_USER: guest
  RABBITMQ_PASSWORD: guest
  RABBITMQ_QUEUE: default
  RABBITMQ_VHOST: /

jobs:
  coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          [ms-auth, ms-cart, ms-catalog, ms-order, ms-payment, ms-product]
    continue-on-error: true
    services:
      rabbitmq:
        image: rabbitmq:3.11-management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmqctl status"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          coverage: xdebug

      - name: Install dependencies
        working-directory: ${{ matrix.service }}
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Setup .env for service
        working-directory: ${{ matrix.service }}
        run: |
          echo "APP_ENV=testing" > .env
          echo "APP_KEY=base64:$(php -r 'echo base64_encode(random_bytes(32));')" >> .env
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=:memory:" >> .env

      - name: Run migrations
        working-directory: ${{ matrix.service }}
        run: php artisan migrate --force

      #   - name: Run PHPUnit with coverage
      #     working-directory: ${{ matrix.service }}
      #     env:
      #       XDEBUG_MODE: coverage
      #     run: vendor/bin/phpunit --coverage-text

      - name: Run PHPUnit with coverage(HTML)
        working-directory: ${{ matrix.service }}
        env:
          XDEBUG_MODE: coverage
        run: vendor/bin/phpunit --coverage-html coverage-html --coverage-text || true

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: coverage-${{ matrix.service }}
          path: ${{ matrix.service }}/coverage-html

      - name: Generate infection.json config
        working-directory: ${{ matrix.service }}
        run: |
          cat <<EOF > infection.json
              {
              "source": {
                  "directories": ["app"]
              },
              "logs": {
                  "text": "infection-log.txt",
                  "summary": "infection-summary.txt"
              },
              "phpUnit": {
                  "customPath": "./vendor/bin/phpunit",
              },
              "mutators": {
                  "@default": true
              }
          }
          EOF

      - name: Run Infection (mutation testing)
        working-directory: ${{ matrix.service }}
        env:
          XDEBUG_MODE: coverage
        run: |
          composer config --no-plugins allow-plugins.infection/extension-installer true
          composer require --dev infection/infection --no-interaction
          vendor/bin/infection --threads=2 --min-msi=50 --only-covered

      - name: Upload Infection report
        uses: actions/upload-artifact@v4
        with:
          name: infection-report-${{ matrix.service }}
          path: ${{ matrix.service }}/infection-log.txt
            ${{ matrix.service }}/infection-summary.txt
